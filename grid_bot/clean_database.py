#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Grid Bot
–£–¥–∞–ª—è–µ—Ç –ª–∏—à–Ω–∏–µ —É—Ä–æ–≤–Ω–∏, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∫–∏
"""

import sqlite3
import os

def clean_database():
    """–û—á–∏—Å—Ç–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ª–∏—à–Ω–∏—Ö —É—Ä–æ–≤–Ω–µ–π"""
    db_path = "grid_data.db"
    
    if not os.path.exists(db_path):
        print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        cursor.execute("SELECT COUNT(*) FROM grids")
        total_levels = cursor.fetchone()[0]
        
        cursor.execute("SELECT DISTINCT symbol FROM grids")
        symbols = [row[0] for row in cursor.fetchall()]
        
        print(f"üìä –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   –í—Å–µ–≥–æ —É—Ä–æ–≤–Ω–µ–π: {total_levels}")
        print(f"   –°–∏–º–≤–æ–ª—ã: {', '.join(symbols)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–≤–Ω–µ–π –ø–æ —Å–∏–º–≤–æ–ª–∞–º
        for symbol in symbols:
            cursor.execute("SELECT COUNT(*) FROM grids WHERE symbol = ?", (symbol,))
            count = cursor.fetchone()[0]
            print(f"   {symbol}: {count} —É—Ä–æ–≤–Ω–µ–π")
        
        print(f"\nüßπ –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —É—Ä–æ–≤–Ω–∏
        cursor.execute("DELETE FROM grids")
        deleted_count = cursor.rowcount
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–¥–µ–ª–∫–∏
        cursor.execute("DELETE FROM trades")
        deleted_trades = cursor.rowcount
        
        conn.commit()
        conn.close()
        
        print(f"‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:")
        print(f"   –£–¥–∞–ª–µ–Ω–æ —É—Ä–æ–≤–Ω–µ–π: {deleted_count}")
        print(f"   –£–¥–∞–ª–µ–Ω–æ —Å–¥–µ–ª–æ–∫: {deleted_trades}")
        print(f"   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –¥–ª—è –Ω–æ–≤—ã—Ö —Å–µ—Ç–æ–∫")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {e}")

if __name__ == "__main__":
    clean_database()
